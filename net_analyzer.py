#!/usr/bin/python
from os import system
import sys, socket, struct

endc="\033[0m"
red="\033[1;31m"
yellow="\033[1;33m"

def calc(index, octet):
    def cidr_to_netmask(mask):
        host_bits = 32 - mask
        netmask = socket.inet_ntoa(struct.pack('!I', (1 << 32) - (1 << host_bits)))
        return netmask
    netmask = cidr_to_netmask(mask)
    diff = mask - index
    rangos = baits[diff]
    interval = int(octet / rangos)
    net = rangos * interval
    broad = (rangos * (interval + 1)) - 1
    hosts = 2**(32 - mask)
    if octet == ip[-3]: #8
        print(f" > La direccion de red es {ip[0]}.{net}.0.0. Rangos de {rangos} en {rangos}")
        print(f" > La mascara de red es {netmask}")
        print(f" > La gateway es {ip[0]}.{net}.0.1")
        print(f" > La broadcast es {ip[0]}.{broad}.255.255")
        print(f" > Hosts: {ip[0]}.{net}.0.2 <-> {ip[0]}.{broad}.255.254 = {hosts}")
    elif octet == ip[-2]: #16
        print(f" > La direccion de red es {ip[0]}.{ip[1]}.{net}.0. Rangos de {rangos} en {rangos}")
        print(f" > La mascara de red es {netmask}")
        print(f" > La gateway es {ip[0]}.{ip[1]}.{net}.1")
        print(f" > La broadcast es {ip[0]}.{ip[1]}.{broad}.255")
        print(f" > Hosts: {ip[0]}.{ip[1]}.{net}.2 <-> {ip[0]}.{ip[1]}.{broad}.254 = {hosts}")
    elif octet == ip[-1]: # 24
        print(f" > La direccion de red es {ip[0]}.{ip[1]}.{ip[2]}.{net}. Rangos de {rangos} en {rangos}")
        print(f" > La mascara de red es {netmask}")
        print(f" > La gateway es {ip[0]}.{ip[1]}.{ip[2]}.{net + 1}")
        print(f" > La broadcast es {ip[0]}.{ip[1]}.{ip[2]}.{broad}")
        print(f" > Hosts: {ip[0]}.{ip[1]}.{ip[2]}.{net+2} <-> {ip[0]}.{ip[1]}.{ip[2]}.{broad-1} = {hosts}")
    data = [net, rangos, hosts]
    return data

while True:
    try:
        ip = [int(x) for x in input(f"{yellow}Ingrese una direccion IP:{endc} ").split(".")]
        mask = int(input(f"{yellow}Ingrese una mascara de subred:{endc} /"))
        break
    except:
        print("error, pon una ip y mascara valida")

indexes = [8, 16, 24]; baits = [256,128,64,32,16,8,4,2,1]
if (mask >= 8) and (mask < 16):
    clase = 1
    index = indexes[0]
    octet = ip[-3]
    data = calc(index, octet)
elif (mask >= 16) and (mask < 24):
    clase = 2
    index = indexes[1]
    octet = ip[-2]
    data = calc(index, octet)
elif (mask >= 24):
    clase = 3
    index = indexes[2]
    octet = ip[-1]
    data = calc(index, octet)

net = data[0]; rangos = data[1]; hosts = data[2]
