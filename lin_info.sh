#!/bin/bash

GREEN="\e[0;32m\033[1m"; RED="\e[0;31m\033[1m"; YLLW="\e[0;33m\033[1m"; GRAY="\e[0;37m\033[1m"
ENDC="\033[0m\e[0m"; BOLD="\e[7m"; ENDB="\e[27m"

separador () {
 echo -ne "\n     ╔════════════════════╗                                                \n"
 echo -ne "═════╣  $1          ╠══════════════════════════════════════════════════════\n"
 echo -ne "     ╚════════════════════╝                                                \n"
 }

titulo () {
 echo -e "\n  >  ${BOLD}$1${ENDB}"
}

# ------------------------------------------------------------------------ #
separador "USUARIOS"
echo -e "  >  Usuario actual:" ${YLLW}$(whoami)${ENDC}
echo -e "  >  Usuarios del Sistema: " ${YLLW}$(cat /etc/passwd | grep -i "sh$" | awk '{print $1}' FS=":" | xargs)${ENDC}
echo -e "  >  Grupos del usuario actual: ${YLLW}$(id | grep -oE "\((.*?)\)" | sed 's/[()]/ /g')${ENDC}"

# ------------------------------------------------------------------------ #
separador "BINARIOS"
titulo "SUIDS"; echo -ne "${RED}"
find / -perm /4000 2>/dev/null | grep -vE "kismet|snap|chrome|mount|chfn|chsh|passw|newgrp|su$|uuidd|pppd|ping|dbus|/at$|ssh-keysign|dmcrypt-get-device|traceroute|xorg"; echo -ne "${ENDC}"
titulo "Capabilities"; echo -ne "${RED}"; getcap -r / 2>/dev/null | grep -E "python|php|perl|ruby|node|gdb|vi" || echo "No capabilities"; echo -ne "${ENDC}"
titulo "SUDO COMMANDS"; echo -ne "${RED}"; sudo -l | grep "("; echo -ne "${ENDC}" 

# ------------------------------------------------------------------------ #
separador "ARCHIVOS"
titulo "Carpetas home de los diferentes usuarios"
for i in $(ls /home); do echo -e "[$i] >"; echo -ne "${YLLW}"
ls -la /home/$i 2>/dev/null | grep -v "\.$"; echo -ne "${ENDC}"; done
echo -n "Cosas raras en los bashrc? "; for i in $(ls /home); do cat /home/$i/.bashrc 2>/dev/null | grep -E "\.sh|\.py" || echo -en "${YLLW}No${ENDC}"; done;

titulo "Archvos de configuracion con permiso de escritura"; 
echo -ne "${YLLW}"; find /etc \-writable 2>/dev/null | grep -vE "network|systemd"
find / -type f \-writable -name "*.conf" 2>/dev/null; echo -ne "${ENDC}" 

titulo "Archivos del usaurio actual"; echo -ne "${YLLW}"
find / -user $(whoami) 2>/dev/null | grep -vE "proc|firefox|cgroup|systemd|doc|run|cache|pkg|snap|.local|/var/www/html"; echo -ne "${ENDC}" 

titulo "Archivos de configuracion"
echo -e "${RED}NGINX/APACHE${ENDC}"; 
for i in $(find /etc -type f -o -type l 2>/dev/null | grep -E "sites-available|sites-enabled"); do 
echo -e "\n${RED}[$i] >${ENDC}${YLLW}"; cat $i | grep -v "#"; echo -ne "${ENDC}"; done
echo -e "${RED}WORDPRESS${ENDC}"; 
f=$(find /var/www/html/ -name wp-config.php 2>/dev/null) && cat "$f" 2>/dev/null | grep "DB" | head -n 3

titulo "Ruta: /tmp"; echo -ne "${YLLW}"; ls /tmp | grep -v "systemd"; echo -ne "${ENDC}"
titulo "Historial de Bash"; echo -ne "${YLLW}"; cat /home/$(whoami)/.bash_history; echo -ne "${ENDC}"
titulo "Mails";
for i in $(ls /var/mail); do echo -e "\n${RED}[$i] >${ENDC}${YLLW}"; cat "/var/mail/$i"; echo -ne "${ENDC}"; done

titulo "WWW"; echo -ne "${YLLW}"; ls -a /var/www | grep -vE "\.$"; echo -ne "${ENDC}"
titulo "Backups"; echo -ne "${YLLW}"; ls /var/backups;
find / -name "*.backup" 2>/dev/null; find / -name "*backup*" 2>/dev/null | grep ".gz$"; echo -ne "${ENDC}"

titulo "OPT";  echo -ne "${YLLW}"; ls -la /opt | grep -v "\.$"; echo -ne "${ENDC}"
titulo "Logs"; echo -ne "${YLLW}";
find / -type f -name "*.log" -readable 2>/dev/null | grep -vE "metasploit|dkms"; echo -ne "${ENDC}"

# ----------------------------------------- #
separador "SISTEMA "
echo -e "  > Sistema Operativo: ${YLLW} $(uname -a | awk '{print $1 " -> " $2 " -> " $3}' FS=' ')${ENDC}";
echo -e "  > Arquitectura:\n ${YLLW} $(lscpu | head -n3 ) $(lscpu | grep -E "Virtualization | name") ${ENDC}";
echo -e "  > $(lpstat -a 2>/dev/null || echo " No hay impresoras")";
titulo "VARIABLES DE ENTORNO"; echo -ne "${YLLW}"; env | grep -vE "LESS|COLORS|WINDOW|SESSION|XDG|SCREEN|PANEL|PS1";  echo -ne "${ENDC}"

separador "PROGRMAS"
echo -e "\n  >  Binarios utiles?: ${YLLW} $(which nmap aws nc ncat netcat nc.traditional wget curl ping gcc g++ make gdb base64 socat python python2 python3 python2.7 python2.6 python3.6 python3.7 perl php ruby xterm doas sudo fetch docker lxc ctr runc rkt kubectl 2>/dev/null | awk '{print $4}' FS='/' | xargs) ${ENDC}";

separador "MYSQL   "
echo -ne "${YLLW}"
systemctl status mysql 2>/dev/null | grep -o ".\{0,0\}user.\{0,50\}" | cut -d '=' -f2 | cut -d ' ' -f1 | grep "root" && echo -e "\n > Root usas mysql"; echo -ne "${ENDC}"
echo -e "\n > Archivos de configuracion sql: ${YLLW}"
cat /etc/mysql/mysql.conf.d/mysqld.cnf 2>/dev/null | grep -v "^#" | head -n 15; echo -ne "${ENDC}"

# ------------------------------------------------------------------------ #
separador "PROCESOS"; echo -ne "${YLLW}"
ps faux | grep -vE "accountsservice|firefox|VBox|]|libexec|systemd|wpa_supplicant|containerd|NetworkManager" | grep -v "www-data"  
cat /etc/cron* /etc/at* /etc/anacrontab /var/spool/cron/crontabs/root 2>/dev/null | grep -v "^#"; 
cat /etc/crontab | grep update  && echo -e "${ENDC}Puede ser vulnerable a pre-invoke update"; echo -ne "${ENDC}"

# ------------------------------------------------------------------------ #
separador "REDES   "
echo -e "  >  Direcciones IP: ${YLLW} $(hostname -I) ${ENDC}"
echo -e "  >  Interfaz: ${YLLW} $(cat /proc/net/arp | awk '{print $6}' | tail -n 1) ${ENDC}"
titulo "Puertos abiertos"; echo -ne "${YLLW}";  netstat -tulvpn | grep -E "127.0.0|::" 2>/dev/null; echo -ne "${ENDC}"
titulo "Direcciones"; echo -ne "${YLLW}"; cat /etc/hosts 2>/dev/null | grep -vE "#|127.0|ff0|::" | sed '/^$/d'; echo -ne "${ENDC}"
titulo "Interfaces"; echo -ne "${YLLW}"; cat /etc/networks; arp -e || arp -a; echo -ne "${ENDC}"
titulo "Contenedores:"; echo -ne "${YLLW}"; route | grep "docker" | awk '{print $1" -> "$2" -> "$3 " -> " $8}' FS=" "; echo -ne "${ENDC}"

separador "DEFENSAS"
echo -e "\n  >  SELinux?: ${YELLOW} $(sestatus 2>/dev/null || echo "No hay \"sestatus\"") ${ENDC}"
[ -d "/etc/apparmor.d/" ] && echo "Existe AppArmor:" && ls /etc/apparmor.d/
